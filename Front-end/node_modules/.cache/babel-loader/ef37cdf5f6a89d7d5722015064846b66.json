{"ast":null,"code":"// import React, { useContext, useEffect, useState } from 'react';\n// import List from '../usersList/list';\n// import './rightBar.css';\n// export default function RightBar(props) {\n//   const [roomname, setroomname] = useState('');\n//   const [isRoomModalOpen, setRoomModalOpen] = useState(false);\n//   const [onlineUsers, setOnlineUsers] = useState([]);\n//   useEffect(() => {\n//     if (props.user.userId) {\n//       props.socket.emit('addUser', props.user.userId);\n//       props.socket.on('getUsers', users => {\n//         let temp = props.allUsers\n//           .filter(f => users.some(u => u.userId === f._id))\n//           .filter(el => el._id !== props.user.userId);\n//         setOnlineUsers(temp);\n//       });\n//     }\n//   }, [props]);\n//   const handleUserClick = (e, user) => {\n//     props.handleSelectedUser(e, user);\n//     setRoomModalOpen(true);\n//   };\n//   const handleModalClose = () => {\n//     setRoomModalOpen(false);\n//   };\n//   return (\n//     <>\n//       <h4 className='rightbarTitle'>Online Friends</h4>\n//       <ul className='rightbarFriendList'>\n//         {onlineUsers.map(onlineUser => (\n//           <List\n//             onlineUser={onlineUser}\n//             handleSelectedUser={handleSelectedUser}\n//             socket={props.socket}\n//             selectedUser={selectedUser}\n//             user={user}\n//             allUsers={allUsers}\n//           />\n//         ))}\n//       </ul>\n//     </>\n//   );\n// }","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/home/rightBar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import List from '../usersList/list';\n// import './rightBar.css';\n\n// export default function RightBar(props) {\n//   const [roomname, setroomname] = useState('');\n//   const [isRoomModalOpen, setRoomModalOpen] = useState(false);\n//   const [onlineUsers, setOnlineUsers] = useState([]);\n\n//   useEffect(() => {\n//     if (props.user.userId) {\n//       props.socket.emit('addUser', props.user.userId);\n//       props.socket.on('getUsers', users => {\n//         let temp = props.allUsers\n//           .filter(f => users.some(u => u.userId === f._id))\n//           .filter(el => el._id !== props.user.userId);\n//         setOnlineUsers(temp);\n//       });\n//     }\n//   }, [props]);\n//   const handleUserClick = (e, user) => {\n//     props.handleSelectedUser(e, user);\n//     setRoomModalOpen(true);\n//   };\n//   const handleModalClose = () => {\n//     setRoomModalOpen(false);\n//   };\n//   return (\n//     <>\n//       <h4 className='rightbarTitle'>Online Friends</h4>\n//       <ul className='rightbarFriendList'>\n//         {onlineUsers.map(onlineUser => (\n//           <List\n//             onlineUser={onlineUser}\n//             handleSelectedUser={handleSelectedUser}\n//             socket={props.socket}\n//             selectedUser={selectedUser}\n//             user={user}\n//             allUsers={allUsers}\n//           />\n//         ))}\n//       </ul>\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}