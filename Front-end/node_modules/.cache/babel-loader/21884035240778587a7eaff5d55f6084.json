{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/chat/chat.js\";\nimport './chat.scss';\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport UserContext from '../../userContext/UserContext';\n\nfunction Chat(_ref) {\n  let {\n    username,\n    room,\n    socket,\n    state\n  } = _ref;\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    let userId = state.user.userId;\n    socket.emit('joinRoom', {\n      userId,\n      room,\n      username\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    socket.on('message', data => {\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text\n      });\n      setMessages([...temp]);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket]);\n  useEffect(() => {\n    return () => {\n      let userId = state.user.userId;\n      socket.emit('roomDisconect', {\n        userId\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const sendData = () => {\n    if (text !== '') {\n      let userId = state.user.userId;\n      socket.emit('chat', {\n        text,\n        userId\n      });\n      setText('');\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, username, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '0.7rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }\n  }, \"in \", room)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, messages.map(i => {\n    if (i.username === username) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, i.text), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, i.username));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message mess-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, i.text, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, i.username));\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"enter your message\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        sendData();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/chat/chat.js"],"names":["React","useState","useEffect","useRef","useContext","UserContext","Chat","username","room","socket","state","text","setText","messages","setMessages","userId","user","emit","on","data","temp","push","sendData","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","margin","fontSize","map","i","e","target","value","key"],"mappings":"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","sourcesContent":["import './chat.scss';\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport UserContext from '../../userContext/UserContext';\n\nfunction Chat({ username, room, socket, state }) {\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    let userId = state.user.userId;\n    socket.emit('joinRoom', { userId, room, username });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    socket.on('message', data => {\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text\n      });\n      setMessages([...temp]);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket]);\n  useEffect(() => {\n    return () => {\n      let userId = state.user.userId;\n      socket.emit('roomDisconect', { userId });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const sendData = () => {\n    if (text !== '') {\n      let userId = state.user.userId;\n      socket.emit('chat', { text, userId });\n      setText('');\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  return (\n    <div className='chat'>\n      <div className='user-name'>\n        <h2>\n          <div\n            className='d-flex justify-content-between'\n            style={{ margin: '0' }}\n          >\n            <span style={{ margin: '0' }}>\n              {username} <span style={{ fontSize: '0.7rem' }}>in {room}</span>\n            </span>\n            <span style={{ margin: '0' }}>\n              <i class='fas fa-times-circle'></i>\n            </span>\n          </div>\n        </h2>\n      </div>\n      <div className='chat-message'>\n        {messages.map(i => {\n          if (i.username === username) {\n            return (\n              <div className='message'>\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className='message mess-right'>\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className='send'>\n        <input\n          placeholder='enter your message'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}