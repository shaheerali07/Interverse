{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/usersList/list.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport Api from '../../api/Api';\nimport { getAllChannelsApi, getAllUsersApi } from '../../constants';\nimport socketClient from 'socket.io-client';\nconst SERVER = 'http://localhost:3001';\nexport default function List(props) {\n  const [users, setUsers] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [channel, setChannel] = useState(null); // const [socket, setSocket] = useState(null);\n\n  let socket;\n  useEffect(() => {\n    configureSocket();\n    Api.get(`${process.env.REACT_APP_BASE_URL}${getAllChannelsApi}`).then(res => {\n      setChannels(res.channels); // setUsers(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const configureSocket = () => {\n    socket = socketClient(SERVER);\n    socket.on('connection', () => {\n      if (channel) {\n        handleChannelSelect(channel.id);\n      }\n    });\n    socket.on('channel', channel => {\n      let channels = channels;\n      channels.forEach(c => {\n        if (c.id === channel.id) {\n          c.participants = channel.participants;\n        }\n      });\n      setChannels(channels);\n    });\n  };\n\n  const handleChannelSelect = id => {\n    let channel = channels.find(c => {\n      return c.id === id;\n    });\n    setChannel(channel);\n    socket.emit('channel-join', id, ack => {});\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, channels.map((el, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    as: \"li\",\n    className: \"d-flex justify-content-between align-items-start listItem\",\n    onClick: e => props.handleSelectedUser(e, el),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ms-2 me-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, el.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, el.participants)), /*#__PURE__*/React.createElement(Badge, {\n    className: \"avatar\",\n    variant: \"primary\",\n    pill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/usersList/list.js"],"names":["React","useEffect","useState","Badge","Card","ListGroup","Api","getAllChannelsApi","getAllUsersApi","socketClient","SERVER","List","props","users","setUsers","channels","setChannels","channel","setChannel","socket","configureSocket","get","process","env","REACT_APP_BASE_URL","then","res","catch","err","console","log","on","handleChannelSelect","id","forEach","c","participants","find","emit","ack","map","el","index","e","handleSelectedUser","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,iBAAlD;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,MAAMC,MAAM,GAAG,uBAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC,CAHkC,CAIlC;;AACA,MAAIiB,MAAJ;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,eAAe;AACfd,IAAAA,GAAG,CAACe,GAAJ,CAAS,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,GAAEjB,iBAAkB,EAA9D,EACGkB,IADH,CACQC,GAAG,IAAI;AACXV,MAAAA,WAAW,CAACU,GAAG,CAACX,QAAL,CAAX,CADW,CAEX;AACD,KAJH,EAKGY,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GAVQ,EAUN,EAVM,CAAT;;AAWA,QAAMR,eAAe,GAAG,MAAM;AAC5BD,IAAAA,MAAM,GAAGV,YAAY,CAACC,MAAD,CAArB;AACAS,IAAAA,MAAM,CAACY,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5B,UAAId,OAAJ,EAAa;AACXe,QAAAA,mBAAmB,CAACf,OAAO,CAACgB,EAAT,CAAnB;AACD;AACF,KAJD;AAKAd,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAqBd,OAAO,IAAI;AAC9B,UAAIF,QAAQ,GAAGA,QAAf;AACAA,MAAAA,QAAQ,CAACmB,OAAT,CAAiBC,CAAC,IAAI;AACpB,YAAIA,CAAC,CAACF,EAAF,KAAShB,OAAO,CAACgB,EAArB,EAAyB;AACvBE,UAAAA,CAAC,CAACC,YAAF,GAAiBnB,OAAO,CAACmB,YAAzB;AACD;AACF,OAJD;AAKApB,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KARD;AASD,GAhBD;;AAiBA,QAAMiB,mBAAmB,GAAGC,EAAE,IAAI;AAChC,QAAIhB,OAAO,GAAGF,QAAQ,CAACsB,IAAT,CAAcF,CAAC,IAAI;AAC/B,aAAOA,CAAC,CAACF,EAAF,KAASA,EAAhB;AACD,KAFa,CAAd;AAGAf,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAE,IAAAA,MAAM,CAACmB,IAAP,CAAY,cAAZ,EAA4BL,EAA5B,EAAgCM,GAAG,IAAI,CAAE,CAAzC;AACD,GAND;;AAOA,sBACE,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,QAAQ,CAACyB,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,kBACZ,oBAAC,SAAD,CAAW,IAAX;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,EAAE,EAAC,IAFL;AAGE,IAAA,SAAS,EAAC,2DAHZ;AAIE,IAAA,OAAO,EAAEC,CAAC,IAAI/B,KAAK,CAACgC,kBAAN,CAAyBD,CAAzB,EAA4BF,EAA5B,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,EAAE,CAACI,IAA1B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,EAAE,CAACL,YAAP,CAFF,CANF,eAUE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAC,SAAlC;AAA4C,IAAA,IAAI,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADD,CADH,CADF,CADF,CADF,CADF;AA0BD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport Api from '../../api/Api';\nimport { getAllChannelsApi, getAllUsersApi } from '../../constants';\nimport socketClient from 'socket.io-client';\nconst SERVER = 'http://localhost:3001';\n\nexport default function List(props) {\n  const [users, setUsers] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [channel, setChannel] = useState(null);\n  // const [socket, setSocket] = useState(null);\n  let socket;\n\n  useEffect(() => {\n    configureSocket();\n    Api.get(`${process.env.REACT_APP_BASE_URL}${getAllChannelsApi}`)\n      .then(res => {\n        setChannels(res.channels);\n        // setUsers(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n  const configureSocket = () => {\n    socket = socketClient(SERVER);\n    socket.on('connection', () => {\n      if (channel) {\n        handleChannelSelect(channel.id);\n      }\n    });\n    socket.on('channel', channel => {\n      let channels = channels;\n      channels.forEach(c => {\n        if (c.id === channel.id) {\n          c.participants = channel.participants;\n        }\n      });\n      setChannels(channels);\n    });\n  };\n  const handleChannelSelect = id => {\n    let channel = channels.find(c => {\n      return c.id === id;\n    });\n    setChannel(channel);\n    socket.emit('channel-join', id, ack => {});\n  };\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <ListGroup>\n            {channels.map((el, index) => (\n              <ListGroup.Item\n                key={index}\n                as='li'\n                className='d-flex justify-content-between align-items-start listItem'\n                onClick={e => props.handleSelectedUser(e, el)}\n              >\n                <div className='ms-2 me-auto'>\n                  <div className='bold'>{el.name}</div>\n                  <p>{el.participants}</p>\n                </div>\n                <Badge className='avatar' variant='primary' pill>\n                  <i className='fas fa-user-plus'></i>\n                </Badge>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}