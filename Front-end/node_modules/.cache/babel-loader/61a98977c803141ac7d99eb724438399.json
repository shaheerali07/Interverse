{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/home/Welcome.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../userContext/UserContext';\nimport List from '../usersList/list';\nimport NavBar from './navbar';\nexport default function Welcome() {\n  const [user, setUser] = useState({});\n  const [, userDispatch] = useContext(UserContext);\n  let history = useHistory();\n  useEffect(() => {\n    let data = localStorage.getItem('userData');\n\n    if (data) {\n      setUser(JSON.parse(data));\n      userDispatch({\n        type: 'SET_USER',\n        payload: JSON.parse(data)\n      });\n    }\n  }, []);\n\n  const handleLogOut = async () => {\n    await userDispatch({\n      type: 'LOGOUT'\n    });\n    history.push('/login');\n  };\n\n  const messages = [new Message({\n    id: 1,\n    message: \"I'm the recipient! (The person you're talking to)\"\n  }), // Gray bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 1,\n    message: \"I'm the recipient! (The person you're talking to)\"\n  }), // Gray bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }) // Blue bubble\n  ];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n    user: user,\n    handleLogOut: handleLogOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mainContentRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"logged-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"\\u25CF\"))), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageDisplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ChatFeed, {\n    messages: messages // Array: list of message objects\n    // isTyping={true} // Boolean: is the recipient typing\n    ,\n    hasInputField: false // Boolean: use our input, or use your own\n    ,\n    showSenderName: true // show the name of the user who sent the message\n    ,\n    bubblesCentered: false //Boolean should the bubbles be centered in the feed?\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '5%',\n      marginBottom: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    // onSubmit={e => this.onMessageSubmit(e)}\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text\",\n    placeholder: \"Type a message here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"sendButton\",\n    type: \"submit\",\n    value: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })))))))));\n}","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/home/Welcome.js"],"names":["React","useContext","useEffect","useState","Card","Col","Row","ChatFeed","Message","useHistory","UserContext","List","NavBar","Welcome","user","setUser","userDispatch","history","data","localStorage","getItem","JSON","parse","type","payload","handleLogOut","push","messages","id","message","height","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../userContext/UserContext';\nimport List from '../usersList/list';\nimport NavBar from './navbar';\n\nexport default function Welcome() {\n  const [user, setUser] = useState({});\n  const [, userDispatch] = useContext(UserContext);\n  let history = useHistory();\n\n  useEffect(() => {\n    let data = localStorage.getItem('userData');\n    if (data) {\n      setUser(JSON.parse(data));\n      userDispatch({ type: 'SET_USER', payload: JSON.parse(data) });\n    }\n  }, []);\n\n  const handleLogOut = async () => {\n    await userDispatch({ type: 'LOGOUT' });\n    history.push('/login');\n  };\n  const messages = [\n    new Message({\n      id: 1,\n      message: \"I'm the recipient! (The person you're talking to)\"\n    }), // Gray bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({\n      id: 1,\n      message: \"I'm the recipient! (The person you're talking to)\"\n    }), // Gray bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }) // Blue bubble\n  ];\n  return (\n    <>\n      <NavBar user={user} handleLogOut={handleLogOut} />\n      <div className='mainContent'>\n        <Row className='mainContentRow'>\n          <Col xs lg='4'>\n            <List />\n          </Col>\n          <Col xs lg='8'>\n            <Card>\n              <Card.Header>\n                <div className='headDiv'>\n                  <p className='userName'>Name</p>\n                  <span class='logged-in'>●</span>\n                </div>\n              </Card.Header>\n              <Card.Body>\n                <div className='messageDisplay'>\n                  <ChatFeed\n                    messages={messages} // Array: list of message objects\n                    // isTyping={true} // Boolean: is the recipient typing\n                    hasInputField={false} // Boolean: use our input, or use your own\n                    showSenderName // show the name of the user who sent the message\n                    bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\n                  />\n                </div>\n                <div style={{ height: '5%', marginBottom: '30px' }}>\n                  <form\n                    // onSubmit={e => this.onMessageSubmit(e)}\n                    className='form'\n                  >\n                    <input\n                      className='text'\n                      placeholder='Type a message here...'\n                    />\n                    <input\n                      className='sendButton'\n                      type='submit'\n                      value='Send'\n                    ></input>\n                  </form>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}