{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/usersList/list.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport Api from '../../api/Api';\nimport { getAllUsersApi } from '../../constants';\nimport UserContext from '../../userContext/UserContext';\nimport RoomModal from '../modals/roomModal';\nexport default function List(props) {\n  const [users, setUsers] = useState([]);\n  const [roomname, setroomname] = useState('');\n  const [isRoomModalOpen, setRoomModalOpen] = useState(false);\n  const [state, userDispatch] = useContext(UserContext);\n  useEffect(() => {\n    props.socket.on('usersList', users => {\n      let temp = users.users;\n      temp.filter(el => el.name !== props.user.name);\n      console.log(temp, state);\n      setUsers(users.users);\n    });\n  });\n\n  const handleUserClick = (e, user) => {\n    props.handleSelectedUser(e, user);\n    setRoomModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setRoomModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RoomModal, {\n    isRoomModalOpen: isRoomModalOpen,\n    handleClose: handleModalClose,\n    setroomname: setroomname,\n    roomname: roomname,\n    socket: props.socket,\n    selectedUser: props.selectedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, users.map((el, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    as: \"li\",\n    className: \"d-flex justify-content-between align-items-start listItem\",\n    onClick: e => handleUserClick(e, el),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ms-2 me-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, el.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, el.phone)), /*#__PURE__*/React.createElement(Badge, {\n    className: \"avatar\",\n    variant: \"primary\",\n    pill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/usersList/list.js"],"names":["React","useEffect","useState","Badge","Card","ListGroup","Api","getAllUsersApi","UserContext","RoomModal","List","props","users","setUsers","roomname","setroomname","isRoomModalOpen","setRoomModalOpen","state","userDispatch","useContext","socket","on","temp","filter","el","name","user","console","log","handleUserClick","e","handleSelectedUser","handleModalClose","selectedUser","map","index","phone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport Api from '../../api/Api';\nimport { getAllUsersApi } from '../../constants';\nimport UserContext from '../../userContext/UserContext';\nimport RoomModal from '../modals/roomModal';\n\nexport default function List(props) {\n  const [users, setUsers] = useState([]);\n  const [roomname, setroomname] = useState('');\n  const [isRoomModalOpen, setRoomModalOpen] = useState(false);\n  const [state, userDispatch] = useContext(UserContext);\n\n  useEffect(() => {\n    props.socket.on('usersList', users => {\n      let temp = users.users;\n      temp.filter(el => el.name !== props.user.name);\n      console.log(temp, state);\n      setUsers(users.users);\n    });\n  });\n  const handleUserClick = (e, user) => {\n    props.handleSelectedUser(e, user);\n    setRoomModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setRoomModalOpen(false);\n  };\n  return (\n    <>\n      <RoomModal\n        isRoomModalOpen={isRoomModalOpen}\n        handleClose={handleModalClose}\n        setroomname={setroomname}\n        roomname={roomname}\n        socket={props.socket}\n        selectedUser={props.selectedUser}\n      />\n      <Card>\n        <Card.Body>\n          <ListGroup>\n            {users.map((el, index) => (\n              <ListGroup.Item\n                key={index}\n                as='li'\n                className='d-flex justify-content-between align-items-start listItem'\n                onClick={e => handleUserClick(e, el)}\n              >\n                <div className='ms-2 me-auto'>\n                  <div className='bold'>{el.name}</div>\n                  <p>{el.phone}</p>\n                </div>\n                <Badge className='avatar' variant='primary' pill>\n                  <i className='fas fa-user-plus'></i>\n                </Badge>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}