{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/chat/chatBox.js\";\nimport React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport socketClient from 'socket.io-client';\nconst SERVER = 'http://127.0.0.1:3001';\nexport default function ChatBox(props) {\n  const [messages, setMessages] = useState([new Message({\n    id: 1,\n    message: \"I'm the recipient! (The person you're talking to)\"\n  }), // Gray bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 1,\n    message: \"I'm the recipient! (The person you're talking to)\"\n  }), // Gray bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }), // Blue bubble\n  new Message({\n    id: 0,\n    message: \"I'm you -- the blue bubble!\"\n  }) // Blue bubble\n  ]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, props.selectedUser.name || 'Name'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"logged-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"\\u25CF\"))), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageDisplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChatFeed, {\n    messages: messages // Array: list of message objects\n    // isTyping={true} // Boolean: is the recipient typing\n    ,\n    hasInputField: false // Boolean: use our input, or use your own\n    ,\n    showSenderName: true // show the name of the user who sent the message\n    ,\n    bubblesCentered: false //Boolean should the bubbles be centered in the feed?\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '5%',\n      marginBottom: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text\",\n    placeholder: \"Type a message here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"sendButton\",\n    type: \"submit\",\n    value: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/chat/chatBox.js"],"names":["React","useState","Card","ChatFeed","Message","socketClient","SERVER","ChatBox","props","messages","setMessages","id","message","selectedUser","name","height","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,MAAMC,MAAM,GAAG,uBAAf;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CACvC,IAAIG,OAAJ,CAAY;AACVO,IAAAA,EAAE,EAAE,CADM;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAAZ,CADuC,EAInC;AACJ,MAAIR,OAAJ,CAAY;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GAAZ,CALuC,EAKyB;AAChE,MAAIR,OAAJ,CAAY;AACVO,IAAAA,EAAE,EAAE,CADM;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAAZ,CANuC,EASnC;AACJ,MAAIR,OAAJ,CAAY;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GAAZ,CAVuC,EAUyB;AAChE,MAAIR,OAAJ,CAAY;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GAAZ,CAXuC,CAWwB;AAXxB,GAAD,CAAxC;AAcA,sBACE,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBJ,KAAK,CAACK,YAAN,CAAmBC,IAAnB,IAA2B,MAApD,CADF,eAEE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF,eAOE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEL,QADZ,CACsB;AACpB;AAFF;AAGE,IAAA,aAAa,EAAE,KAHjB,CAGwB;AAHxB;AAIE,IAAA,cAAc,MAJhB,CAIiB;AAJjB;AAKE,IAAA,eAAe,EAAE,KALnB,CAK0B;AAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,YAAY,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAC,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,KAAK,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAVF,CAPF,CADF,CADF;AA6BD","sourcesContent":["import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport socketClient from 'socket.io-client';\nconst SERVER = 'http://127.0.0.1:3001';\nexport default function ChatBox(props) {\n  const [messages, setMessages] = useState([\n    new Message({\n      id: 1,\n      message: \"I'm the recipient! (The person you're talking to)\"\n    }), // Gray bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({\n      id: 1,\n      message: \"I'm the recipient! (The person you're talking to)\"\n    }), // Gray bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n    new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }) // Blue bubble\n  ]);\n\n  return (\n    <>\n      <Card>\n        <Card.Header>\n          <div className='headDiv'>\n            <p className='userName'>{props.selectedUser.name || 'Name'}</p>\n            <span className='logged-in'>‚óè</span>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <div className='messageDisplay'>\n            <ChatFeed\n              messages={messages} // Array: list of message objects\n              // isTyping={true} // Boolean: is the recipient typing\n              hasInputField={false} // Boolean: use our input, or use your own\n              showSenderName // show the name of the user who sent the message\n              bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\n            />\n          </div>\n          <div style={{ height: '5%', marginBottom: '30px' }}>\n            <form className='form'>\n              <input className='text' placeholder='Type a message here...' />\n              <input className='sendButton' type='submit' value='Send'></input>\n            </form>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}