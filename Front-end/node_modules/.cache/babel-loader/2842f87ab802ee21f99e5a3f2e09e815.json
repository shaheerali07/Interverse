{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/chat/chat.js\";\nimport './chat.scss';\nimport React, { useState, useEffect, useRef } from 'react'; //gets the data from the action object and reducers defined earlier\n\nfunction Chat(_ref) {\n  let {\n    username,\n    roomname,\n    socket\n  } = _ref;\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n  console.log(socket);\n  useEffect(() => {\n    socket.on('message', data => {\n      debugger;\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== '') {\n      //encrypt the message here\n      socket.emit('chat', text);\n      setText('');\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages, 'mess');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, username, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '0.7rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }, \"in \", roomname))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, messages.map(i => {\n    if (i.username === username) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, i.text), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, i.username));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message mess-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, i.text, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, i.username));\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"enter your message\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        sendData();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/chat/chat.js"],"names":["React","useState","useEffect","useRef","Chat","username","roomname","socket","text","setText","messages","setMessages","console","log","on","data","temp","push","userId","sendData","emit","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","fontSize","map","i","e","target","value","key"],"mappings":"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","sourcesContent":["import './chat.scss';\nimport React, { useState, useEffect, useRef } from 'react';\n//gets the data from the action object and reducers defined earlier\nfunction Chat({ username, roomname, socket }) {\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n  console.log(socket);\n  useEffect(() => {\n    socket.on('message', data => {\n      debugger;\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== '') {\n      //encrypt the message here\n      socket.emit('chat', text);\n      setText('');\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, 'mess');\n  return (\n    <div className='chat'>\n      <div className='user-name'>\n        <h2>\n          {username} <span style={{ fontSize: '0.7rem' }}>in {roomname}</span>\n        </h2>\n      </div>\n      <div className='chat-message'>\n        {messages.map(i => {\n          if (i.username === username) {\n            return (\n              <div className='message'>\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className='message mess-right'>\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className='send'>\n        <input\n          placeholder='enter your message'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}