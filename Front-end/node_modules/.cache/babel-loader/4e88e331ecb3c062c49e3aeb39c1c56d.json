{"ast":null,"code":"var _jsxFileName = \"/home/hp/Learn/Interverse/Front-end/src/components/usersList/list.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport UserContext from '../../userContext/UserContext';\nimport RoomModal from '../modals/roomModal';\nexport default function List(props) {\n  const [roomname, setroomname] = useState('');\n  const [isRoomModalOpen, setRoomModalOpen] = useState(false);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  useEffect(() => {\n    if (props.user.userId) {\n      props.socket.emit('addUser', props.user.userId);\n      props.socket.on('getUsers', users => {\n        let temp = props.allUsers.filter(f => users.some(u => u.userId === f._id)).filter(el => el._id !== props.user.userId);\n        setOnlineUsers(temp);\n      });\n    }\n  }, [props]);\n\n  const handleUserClick = (e, user) => {\n    props.handleSelectedUser(e, user);\n    setRoomModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setRoomModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RoomModal, {\n    isRoomModalOpen: isRoomModalOpen,\n    handleClose: handleModalClose,\n    setroomname: setroomname,\n    roomname: roomname,\n    socket: props.socket,\n    selectedUser: props.selectedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Online Users\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, onlineUsers.map((el, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    as: \"li\",\n    className: \"d-flex justify-content-between align-items-start listItem\",\n    onClick: e => handleUserClick(e, el),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ms-2 me-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, el.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, el.phone)), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-circle\",\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["/home/hp/Learn/Interverse/Front-end/src/components/usersList/list.js"],"names":["React","useContext","useEffect","useState","Badge","Card","ListGroup","UserContext","RoomModal","List","props","roomname","setroomname","isRoomModalOpen","setRoomModalOpen","onlineUsers","setOnlineUsers","user","userId","socket","emit","on","users","temp","allUsers","filter","f","some","u","_id","el","handleUserClick","e","handleSelectedUser","handleModalClose","selectedUser","map","index","name","phone","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport UserContext from '../../userContext/UserContext';\nimport RoomModal from '../modals/roomModal';\n\nexport default function List(props) {\n  const [roomname, setroomname] = useState('');\n  const [isRoomModalOpen, setRoomModalOpen] = useState(false);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n\n  useEffect(() => {\n    if (props.user.userId) {\n      props.socket.emit('addUser', props.user.userId);\n      props.socket.on('getUsers', users => {\n        let temp = props.allUsers\n          .filter(f => users.some(u => u.userId === f._id))\n          .filter(el => el._id !== props.user.userId);\n        setOnlineUsers(temp);\n      });\n    }\n  }, [props]);\n\n  const handleUserClick = (e, user) => {\n    props.handleSelectedUser(e, user);\n    setRoomModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setRoomModalOpen(false);\n  };\n  return (\n    <>\n      <RoomModal\n        isRoomModalOpen={isRoomModalOpen}\n        handleClose={handleModalClose}\n        setroomname={setroomname}\n        roomname={roomname}\n        socket={props.socket}\n        selectedUser={props.selectedUser}\n      />\n      <Card>\n        <Card.Header>Online Users</Card.Header>\n        <Card.Body>\n          <ListGroup>\n            {onlineUsers.map((el, index) => (\n              <ListGroup.Item\n                key={index}\n                as='li'\n                className='d-flex justify-content-between align-items-start listItem'\n                onClick={e => handleUserClick(e, el)}\n              >\n                <div className='ms-2 me-auto'>\n                  <div className='bold'>{el.name}</div>\n                  <p>{el.phone}</p>\n                </div>\n                <i className='fa fa-circle' style={{ color: 'green' }}></i>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}